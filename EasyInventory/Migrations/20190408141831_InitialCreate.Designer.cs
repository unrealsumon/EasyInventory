// <auto-generated />
using EasyInventory.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyInventory.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20190408141831_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyInventory.Data.TB_Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryName");

                    b.Property<bool>("IsActive");

                    b.HasKey("CategoryID");

                    b.ToTable("TB_Category");
                });

            modelBuilder.Entity("EasyInventory.Data.TB_Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductID");

                    b.Property<int>("Quanity");

                    b.Property<float>("TotalPrice");

                    b.Property<float>("UnitPrice");

                    b.HasKey("ID");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("TB_Inventory");
                });

            modelBuilder.Entity("EasyInventory.Data.TB_Products", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode");

                    b.Property<string>("Brand");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Model");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<string>("UnitName")
                        .IsRequired();

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("TB_Products");
                });

            modelBuilder.Entity("EasyInventory.Data.TB_Inventory", b =>
                {
                    b.HasOne("EasyInventory.Data.TB_Products", "TB_Products")
                        .WithOne("TB_Inventory")
                        .HasForeignKey("EasyInventory.Data.TB_Inventory", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyInventory.Data.TB_Products", b =>
                {
                    b.HasOne("EasyInventory.Data.TB_Category", "TB_Category")
                        .WithMany("TB_Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
